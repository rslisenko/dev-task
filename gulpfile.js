const { src, dest, series, parallel, watch } = require('gulp');const sass = require('gulp-sass')(require('sass'));const autoprefixer = require('gulp-autoprefixer');const minifyCSS = require('gulp-csso');const babel = require('gulp-babel');const concat = require('gulp-concat');const uglify = require('gulp-uglify');const rename = require("gulp-rename");const rimraf = require('gulp-rimraf');const browserSync = require('browser-sync').create();const paths = {    scss: {        src: {            main: './assets/css/scss/**/*.scss',        },        dest: {            main: './assets/dist/css/',        }    },    js: {        src: {            main: [                './assets/js/main.js'            ]        },        dest: {            main: './assets/dist/js/',        }    },    img: {        src: './assets/img/**/*.*',        dest: './assets/dist/img/'    }};function clean_images() {    return src(paths.img.dest)        .pipe(rimraf())}function images() {    return src(paths.img.src)        .pipe(dest(paths.img.dest))}function main_css() {    return src(paths.scss.src.main)        .pipe(sass().on('error', sass.logError))        .pipe(autoprefixer({            cascade: false        }))        .pipe(concat('main.css'))        .pipe(minifyCSS())        .pipe(rename({            suffix: '.min'         }))        .pipe(dest(paths.scss.dest.main), { sourcemaps: true })        .pipe(browserSync.stream());}function main_js() {    return src(paths.js.src.main)        .pipe(concat('main.js'))        .pipe(babel({            presets: ['@babel/env']         }))        .pipe(uglify())        .pipe(rename({            suffix: '.min'        }))        .pipe(dest(paths.js.dest.main), { sourcemaps: true });}function browser() {    browserSync.init({        proxy: 'http://dev-task.local/',        files: [            './**/*.php'        ]    });    watch(paths.img.src, series(clean_images, images));    watch(paths.scss.src.main, main_css);    watch(paths.js.src.main, main_js).on('change', browserSync.reload);}exports.clean_images = clean_images;exports.images = images;exports.main_css = main_css;exports.main_js = main_js;exports.default = browser;